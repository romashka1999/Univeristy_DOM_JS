!function(e){var t={};function s(n){if(t[n])return t[n].exports;var u=t[n]={i:n,l:!1,exports:{}};return e[n].call(u.exports,u,u.exports,s),u.l=!0,u.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(s.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var u in e)s.d(n,u,function(t){return e[t]}.bind(null,u));return n},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);const n=document.getElementById("personalId"),u=document.getElementById("firstName"),d=document.getElementById("lastName"),c=document.getElementById("age"),r=document.getElementById("code"),a=document.getElementById("name"),l=document.getElementById("credit"),o=document.getElementById("hours");document.getElementById("createAlert"),document.getElementById("studentTable"),document.getElementById("subjectTable");const i=(e,t)=>{const s=document.createElement("div");200===e?s.classList.add("alert","alert-success"):400===e?s.classList.add("alert","alert-danger"):s.classList.add("alert","alert-warning");const n=document.createTextNode(t);s.appendChild(n),createAlert.innerHTML="",createAlert.appendChild(s)},b=(e,t)=>{let s=[];for(let u of t){const t=document.createElement("tr");function n(e){const s=document.createElement("td"),n=document.createTextNode(e);s.appendChild(n),t.appendChild(s)}const d=document.createElement("th");let c=document.createTextNode(u.personalId);d.appendChild(c),d.setAttribute("scope","row"),t.appendChild(d),n(u.firstName),n(u.lastName),n(u.age);const r=document.createElement("button");r.setAttribute("type","button"),r.setAttribute("id",u.personalId),r.addEventListener("click",(function(){const t=e.removeStudent(this.getAttribute("id"));i(t.statusCode,t.message),b(e,e.getAllStudents())})),r.classList.add("btn","btn-danger"),c=document.createTextNode("Delete"),r.appendChild(c),t.appendChild(r),s.push(t)}studentTable.innerHTML="";for(let e of s)studentTable.appendChild(e)},h=(e,t)=>{let s=[];for(let u of t){const t=document.createElement("tr");function n(e){const s=document.createElement("td"),n=document.createTextNode(e);s.appendChild(n),t.appendChild(s)}const d=document.createElement("th");let c=document.createTextNode(u.code);d.appendChild(c),d.setAttribute("scope","row"),t.appendChild(d),n(u.name),n(u.credit),n(u.hours);const r=document.createElement("button");r.setAttribute("type","button"),r.setAttribute("id",u.code),r.addEventListener("click",(function(){const t=e.removeSubject(this.getAttribute("id"));i(t.statusCode,t.message),h(e,e.getAllsubjects())})),r.classList.add("btn","btn-danger"),c=document.createTextNode("Delete"),r.appendChild(c),t.appendChild(r),s.push(t)}subjectTable.innerHTML="";for(let e of s)subjectTable.appendChild(e)},m=new class{constructor(){this.students={},this.subjects={}}registerStudentOnSubject(e,t){return this.students[e].subjects.includes(this.subjects[t])?"student is already registered on this subject":(this.students[e].subjects.push(this.subjects[t]),this.ubjects[t].students.push(this.students[e]),`student with personalId: ${e} was successfully registered on the subject which code is ${t}`)}deleteStudentFromSubject(e,t){for(let s in this.students[e].subjects)if(this.students[e].subjects[s][t]===t){this.students[e].subjects.splice(s,1);break}for(let s in this.subjects[t].students)if(this.subjects[t].students[s][e]===e){this.subjects[t].students.splice(s,1);break}}allRegisteredStudentsOnSubject(e){return this.subjects[e]?Object.values(this.subjects[e].students):[]}allRegisteredSubjectsOnStudent(e){return this.students[e]?Object.values(this.students[e].subjects):[]}addStudent(e,t){return this.students[e]?{message:`student is already exists in students object with personalId: ${e} personalId`,statusCode:400}:(t.subjects=[],t.personalId=e,this.students[e]=t,{message:`student successfully added in students object with personalId: ${e} personalId`,statusCode:200})}updateStudent(e,t){if(this.students[e]){let s=Object.keys(this.students),n={};for(let t in s)if(t===e){n=this.students[t];break}let u=Object.keys(n);for(let s in u)t.hasOwnProperty(s)&&(this.students[e][s]=t[s]);return`student with personalId: ${e} was successfully updated`}return`student with personalId: ${e} does not exist in students object`}getStudent(e){return this.students[e]?this.students[e]:`student with personalId: ${e} does not exist in students object`}removeStudent(e){return this.students.hasOwnProperty(e)?(delete this.students[e],{message:`successfully deleted student with personalId: ${e}`,statusCode:200}):{message:`student with personalId: ${e} is not exist in students object`,statusCode:400}}getAllStudents(){return Object.values(this.students)}addSubject(e,t){return this.subjects[e]?{message:`subject is already exists in subjects object with code: ${e} code`,statusCode:400}:(t.students=[],t.code=e,this.subjects[e]=t,{message:`subject successfully added in subjects object with code: ${e} code`,statusCode:200})}updateSubject(e,t){if(this.subjects[e]){let s=Object.keys(this.subjects),n={};for(let t in s)if(t===e){n=this.subjects[t];break}let u=Object.keys(n);for(let s in u)updatedStudent.hasOwnProperty(s)&&(this.subjects[e][s]=t[s]);return`subject with code: ${e} was successfully updated`}return`subject with code: ${e} does not exist in subjects object`}getSubject(e){return this.subjects[e]?this.subjects[e]:`subject with code: ${e} does not exist in subjects object`}removeSubject(e){return this.subjects.hasOwnProperty(e)?(delete this.subjects[e],{message:`successfully deleted subject with code: ${e}`,statusCode:200}):{message:`subject with code: ${e} is not exist in subjects object`,statusCode:400}}getAllsubjects(){return Object.values(this.subjects)}};document.getElementById("studentCreate").addEventListener("click",()=>{if(""===n.value||""===u.value||""===d.value||""===c.value)return void i(300,"please fill all fields");if(!parseInt(c.value))return void i(300,"age must be number");const e={firstName:u.value,lastName:d.value,age:c.value},t=m.addStudent(n.value,e);i(t.statusCode,t.message);const s=m.getAllStudents();b(m,s),n.value="",u.value="",d.value="",c.value=""}),document.getElementById("subjectCreate").addEventListener("click",()=>{if(""===r.value||""===a.value||""===l.value||""===o.value)return void i(300,"please fill all fields");const e=parseInt(l.value),t=parseInt(o.value);if(!e||!t)return void i(300,"credit and  hours must be number");const s={name:a.value,credit:l.value,hours:o.value},b=m.addSubject(r.value,s);i(b.statusCode,b.message);const p=m.getAllsubjects();h(m,p),n.value="",u.value="",d.value="",c.value=""})}]);